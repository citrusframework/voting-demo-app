---
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${application.name}
    namespace: ${openshift.namespace}
    labels:
      app: ${application.name}
      provider: fabric8
      project: ${application.name}
      version: ${project.version}
      group: ${project.groupId}
  spec:
    replicas: 1
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
    selector:
      project: ${application.name}
      provider: fabric8
      version: ${project.version}
      group: ${project.groupId}
    template:
      metadata:
        labels:
          app: ${application.name}
          provider: fabric8
          project: ${application.name}
          version: ${project.version}
          group: ${project.groupId}
      spec:
        containers:
        - name: ${application.name}
          image: citrusframework/voting-demo-app:latest
          imagePullPolicy: IfNotPresent
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: in_memory
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          securityContext:
            privileged: false
          volumeMounts:
          - name: tomcat-logs
            mountPath: /opt/tomcat/logs
          - name: tomcat-work
            mountPath: /opt/tomcat/work
          - name: tomcat-temp
            mountPath: /opt/tomcat/temp
        volumes:
        - name: tomcat-logs
          emptyDir: {}
        - name: tomcat-work
          emptyDir: {}
        - name: tomcat-temp
          emptyDir: {}
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: ${application.name}-service
    namespace: ${openshift.namespace}
    labels:
      expose: "true"
      app: ${application.name}
      provider: fabric8
      project: ${application.name}
      version: ${project.version}
      group: ${project.groupId}
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      project: ${application.name}
      provider: fabric8
      group: ${project.groupId}
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Route
  metadata:
    name: ${application.name}-service
    namespace: ${openshift.namespace}
    labels:
      expose: "true"
      provider: fabric8
      project: ${application.name}
      version: ${project.version}
      group: ${project.groupId}
  spec:
    host: ${application.name}.${openshift.domain}
    to:
      kind: Service
      name: ${application.name}-service
      weight: 100
    port:
      targetPort: 8080-tcp
    wildcardPolicy: None